#!/sbin/sh
# a24_utils-tr by YZBruh
# DOSYAYI DÜZENLEMEYİN VEYA DEĞİŞTİRMEYİN! ÖNERİLERİ, HATALARI VE SORUNLARI BİLDİRİN.

## Değişkenler...
DIR=$(pwd)
FSTAB_DIR="/first_stage_ramdisk"
VETC="/vendor/etc"
VERS="1.0.0"

##

## Özel mesajlar
case $1 in
   -v|--version)
     echo "$VERS"
     exit
   ;;
   -a|--author)
     echo "YZBruh"
     exit
   ;;
   -r|--report)
     echo "Hata ve şikayetler için telegram üzerinden YZBruh'a ulaşın."
     echo "Ayrıntılı bilgi ve log verilmez ise yardım edilmeyecek."
     exit
   ;;
   -d|--decrypt)
     STAT="1"
   ;;
   -h|--help)
     echo "Sadece terminalde a24_utils-tr yazın ve çalıştırın!"
     echo "Onay kısımlarında yanıtı yazdıktan sonra enterlamayı unutmayın."
     echo "Seçenekler; "
     echo "   Versiyon bilgisi:  -v veya --version"
     echo "   Script sahibi:     -a veya --author"
     echo "   Rapor:             -r veya --report"
     echo " "
     exit
esac

## Özellikler
cleanup() {
    unset DIR FSTAB_DIR VETC VERS MOUNT_STAT BFS_PASS PASS OPT BACKUP_DIR DIR_NAME DIRX IME_OPT cleanup unencrypt dd_backup imei_backup imei_reload imei_menu ime_re rom resize wiper part reload_rom reload file parts part_file part_name parts n_name select_lang
}

unencrypt() {
echo "Şifreleme durumu kontrol ediliyor..."
sleep 3
if [ -d /data/media ]; then
   echo "Şifreleme zaten devredışı."
   cleanup
   exit
else
   echo "Cihaz şifrelenmiş!"
   sleep 3
   echo "BU İŞLEM BAŞARILI OLUR İSE CİHAZDAKİ TÜM VERİLER SİLİNECEK. YİNEDE DEVAM ETMEK İSTİYORMUSUNUZ? (istiyorsanız y istemiyorsanız n yazın)"
   read PASS
   case $PASS in
      n)
        echo "İşlem iptal edildi."
        cleanup
        exit
      ;;
      y)
        echo "Başlatılıyor..."
        sleep 3
   esac
   echo "Vendor (satıcı) bölümünü bağladınızmı (mount)? Eğer bağladıysanız y bağlamadıysanız n yazın."
   read MOUNT_STAT
   if [ "$MOUNT_STAT" == "y" ]; then
      echo "Vendor RW olarak yeniden bağlanıyor..."
      mount -o remount,rw /vendor
      if [ "$?" == "0" ]; then
         cd /
      else
         umount /vendor
         mount -o rw /vendor
         if [ "$?" == "0" ]; then
            cd /
         else
            echo "BAŞARISIZ!"
         fi
      fi
   else
      sleep 3
      echo "Vendor bağlanıyor..."
      sleep 3
      mount -o rw /vendor
      if [ "$?" == "0" ]; then
         cd /
      else
         echo "VENDOR DÜZGÜN BAĞLANAMADI!"
         cleanup
         exit
      fi
   fi
   sleep 3
   echo "Mevcut fstab.mt6789 siliniyor..."
   rm -rf $VETC/fstab.mt6789
   if [ "$?" == "0" ]; then
      echo "Mevcut fstab.emmc siliniyor..."
      sleep 3
      rm -rf $VETC/fstab.emmc
      if [ "$?" == "0" ]; then
         echo "SİLME İŞLEMİ BAŞARISIZ!"
         echo "LÜTFEN STOCK VENDOR İMAJI FLAŞLAYIN!"
         cleanup
         exit
      else
         cd /
      fi
   else
      echo "SİLME İŞLEMİ BAŞARISIZ!"
      cleanup
   fi
   echo "Yeni fstab dosyaları kopyalanıyor..."
   sleep 3
   chmod -R 777 $FSTAB_DIR
   cp $FSTAB_DIR/fstab.mt6789 $VETC
   if [ "$?" == "0" ]; then
      echo "BAŞARISIZ!"
      echo "LÜTFEN STOCK VENDOR İMAJI FLAŞLAYIN!"
      cleanup
      exit
   else
      cp $FSTAB_DIR/fstab.emmc $VETC
      if [ "$?" == "0" ]; then
         sleep 3
         echo "Cihaz sıfırlanıyor..."
         sleep 3
         echo "Sırayla veri ve önbellek temizlenecek!!!"
      else
         echo "BAŞARISIZ!"
         echo "LÜTFEN STOCK VENDOR İMAJI FLAŞLAYIN!"
         cleanup
         exit
      fi
   fi
   twrp wipe data
   if [ "$?" == "0" ]; then
      sleep 3
      twrp wipe cache
      if [ "$?" == "0" ]; then
         sleep 3
         echo "Sıfırlama tamamlandı."
      else
         echo "SIFIRLAMA BAŞARISIZ (Önbellek - çok önemli değil)!"
         echo "Kendiniz temizlemeyi deneyin. Eğer sıfırlama yapmazsanız cihazın şifrelemesi çözülemez."
      fi
   else
      echo "SIFIRLAMA BAŞARISIZ (Veri - kritik)!"
      echo "Kendiniz temizlemeyi deneyin. Eğer sıfırlama yapmazsanız cihazın şifrelemesi çözülemez."
   fi
   if [ "$MOUNT_STAT" == "y" ]; then
      echo "Vendor bağlantısı kapatılıyor..."
      mount -o remount,ro /vendor
      umount /vendor
      if [ "$?" == "0" ]; then
         cd /
      else
         echo "VENDOR BAĞLANTISI KAPATILAMADI!"
         echo "Siz kendiniz manuel yapmayı deneyin."
      fi
   fi
   sleep 3
   echo "Tüm işlemler tamamlandı!"
   echo "BAŞARILI!"
   cleanup
   exit
fi
}

# ROM yedekleyici özelligi
dd_backup() {
    BACKUP_DIR="A24_DD_BACKUP_"$(date +%Y%m%d)""
    DIR_NAME=$BACKUP_DIR
    echo "Klasörler oluşturuluyor..."
    echo "NOT: USERDATA YEDEKLENMEYECEK."
    mkdir /sdcard/$BACKUP_DIR
    unset BACKUP_DIR
    sleep 3
    echo "Yedeklecek bölümler;"
    ls /dev/block/platform/bootdevice/by-name
    sleep 3
    echo "Yedekleniyor... (Çok uzun sürebilir)."
    cp /dev/block/by-name/* /sdcard/$DIR_NAME
    if [ "$?" == "0" ]; then
       cd /sdcard/$DIR_NAME
    else
       echo "BAŞARISIZ!"
       rm -rf /sdcard/$DIR_NAME
       cleanup
       exit
    fi
    for file in "/sdcard/$DIR_NAME"/*; do
        mv "$file" "${file}.img"
    done
    if [ "$?" == "0" ]; then
       cd /sdcard/$DIR_NAME
    else
       echo "BAŞARISIZ!"
       rm -rf /sdcard/$DIR_NAME
       cleanup
       exit
    fi
    sleep 3
    echo "BAŞARILI!"
    echo "Yol: /sdcard/$DIR_NAME"
}

# IMEI yedeği özelliği
imei_backup() {
    BACKUP_DIR="A24_IMEI_BACKUP_"$(date +%s)""
    DIR_NAME=$BACKUP_DIR
    echo "Klasörler oluşturuluyor..."
    mkdir /sdcard/$BACKUP_DIR
    unset BACKUP_DIR
    sleep 3
    echo "IMEI yedekleniyor..."
    ime=$(dd if=/dev/block/by-name/efs of=/sdcard/$DIR_NAME/efs.img && dd if=/dev/block/by-name/nvcfg of=/sdcard/$DIR_NAME/nvcfg.img && dd if=/dev/block/by-name/nvdata of=/sdcard/$DIR_NAME/nvdata.img && dd if=/dev/block/by-name/frp of=/sdcard/$DIR_NAME/frp.img && dd if=/dev/block/by-name/protect1 of=/sdcard/$DIR_NAME/protect1.img && dd if=/dev/block/by-name/protect2 of=/sdcard/$DIR_NAME/protect2.img)
    if [ "$?" == "0" ]; then
       sleep 3
       echo "BAŞARILI!"
       echo "Yol: /sdcard/$DIR_NAME"
       cleanup
       exit
    else
       echo "BAŞARISIZ!"
       rm -rf /sdcard/$DIR_NAME
       cleanup
       exit
    fi
}

# IMEI yedeğini geri yükleme özelliği
imei_reload() {
    echo "Yedeğin bulunduğu klasörü yazın."
    read DIRX
    if [ -d "$DIRX" ]; then
       cd $DIRX
       echo "Geri yükleniyor..."
       sleep 3
    else
       echo "Yedek klasörü bulunamadı!"
       sleep 3
       cleanup
       exit 1
    fi
    ime_re=$(dd if=efs.img of=/dev/block/by-name/efs && dd if=nvcfg.img of=/dev/block/by-name/nvcfg && dd if=nvdata.img of=/dev/block/by-name/nvdata && dd if=frp.img of=/dev/block/by-name/frp && dd if=protect1.img of=/dev/block/by-name/protect1 && dd if=protect2.img of=/dev/block/by-name/protect2)
    if [ "$?" == "0" ]; then
       echo "BAŞARILI!"
       cleanup
       exit
    else
       echo "BAŞARISIZ!"
       cleanup
       exit 1
    fi
}

# ROM geri yükleyici özelliği
reload_rom() {
    echo "Geri yüklenecek bölümler: "
    ls /dev/block/by-name
    echo "Yedeğin bulunduğu klasörü yazın."
    read DIRX
    if [ -d "$DIRX" ]; then
       cd $DIRX
       echo "Geri yükleniyor..."
       sleep 3
    else
       echo "Yedek klasörü bulunamadı!"
       cleanup
       exit 1
    fi
    files=($DIRX/*.img)
    for file in "${files[@]}" do
        n_name="${file%.img}"
        mv "$file" "$n_name"
    done
    parts=($DIRX/*)
    for part_file in "${parts[@]}" do
        part_name=$(basename "$part_file")
        dd if="$part_file" of="/dev/block/by-name/$part_name"
    done
    if [ "$?" == "0" ]; then
       sleep 3
       echo "BAŞARILI!"
       cleanup
       exit
    else
       echo "BAŞARISIZ!"
       cleanup
       exit 1
    fi
    for file in "/sdcard/$DIRX"/*; do
        mv "$file" "${file}.img"
    done
}

# Temizleyici özelliği
wiper() {
    echo "Bölüm listesi; "
    ls /dev/block/by-name
    sleep 3
    echo "Temizlemek istediğiniz bölümün adını yazın."
    read part
    if [ -f /dev/block/by-name/$part ]; then
       twrp wipe $part
    else
       sleep 2
       echo "Bu ada sahip bir bölüm bulunamadı!"
       exit 1
    fi
}

# IMEI işlem menüsü özelliği
imei_menu() {
    clear
    echo "___________________________________"
    echo "|         IMEI işlemleri          |"
    echo "|_________________________________|"
    echo "| Seçenekler;                     |"
    echo "|   [1] IMEI yedekle              |"
    echo "|   [2] IMEI yedeğini geri yükle  |"
    echo "|   [3] Çıkış                     |"
    echo "|_________________________________|"
    echo "Lütfen bir seçenek seçin (numarayı girerek): "
    read IME_OPT
    case $IME_OPT in
       1)
         imei_backup
       ;;
       2)
         imei_reload
       ;;
       3)
         cleanup
         exit
       ;;
       *)
         echo "Geçersiz seçenek!"
         cleanup
         exit 1
    esac
}

# Klasik menümüz...
menu() {
    clear
    if [ "$STAT" == "1" ]; then
       unencrypt
       exit
    fi
    echo "___________________________________"
    echo "|  Samsung Galaxy A24 TWRP utils  |"
    echo "|            By YZBruh            |"
    echo "|_________________________________|"
    echo "| Seçenekler;                     |"
    echo "|   [1] Veri çözme                |"
    echo "|   [2] DD ile yedek alma         |"
    echo "|   [3] Yedeği geri yükle         |"
    echo "|   [4] IMEI işlemleri            |"
    echo "|   [5] Temizle                   |"
    echo "|   [6] Versiyon                  |"
    echo "|   [7] Çıkış                     |"
    echo "|_________________________________|"
    echo "Lütfen bir seçenek seçin (numarayı girerek): "
    read OPT
    case $OPT in
       1)
         unencrypt
       ;;
       2)
         dd_backup
       ;;
       3)
         reload_rom
       ;;
       4)
         imei_menu
       ;;
       5)
         wiper
       ;;
       6)
         echo "$VERS"
       ;;
       7)
         cleanup
         exit
       ;;
       *)
         echo "Geçersiz seçenek!"
         cleanup
         exit 1
    esac
}

##

## Başlatıcı
menu

##

# script sonu
